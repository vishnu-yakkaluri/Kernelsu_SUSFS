name: Build Motorola GKI 6.6.50 Kernel with KernelSU + SUSFS

on:
  push:
    paths:
      - ".github/workflows/main.yml"
  workflow_dispatch:

jobs:
  build-kernel:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Kernel Source
        uses: actions/checkout@v4
        with:
          repository: MotorolaMobilityLLC/kernel-mtk
          ref: MMI-V1TL35.73-60-3

      - name: Setup Environment
        run: |
          sudo apt update && sudo apt install -y bc bison build-essential cpio curl flex gcc git libssl-dev libncurses-dev libelf-dev python3 unzip xz-utils

      - name: Add KernelSU
        run: |
          git clone https://github.com/tiann/KernelSU
          cd KernelSU
          bash ./kernel/setup.sh ../

      - name: Checkout SUSFS
        run: |
          git clone https://gitlab.com/simonpunk/susfs4ksu.git
          cd susfs4ksu
          git checkout gki-android15-6.6

      - name: Apply SUSFS Patches
        run: |
          cp susfs4ksu/kernel_patches/fs/* fs/
          cp susfs4ksu/kernel_patches/include/linux/* include/linux/
          patch -p1 < susfs4ksu/kernel_patches/50_add_susfs_in_gki-android15-6.6.patch
          cd KernelSU
          patch -p1 < ../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch

      - name: Update Config and Spoof uname
        run: |
          echo "CONFIG_KSU=y" >> arch/arm64/configs/vendor/k62v_haydn_defconfig
          echo "CONFIG_KSU_SUSFS=y" >> arch/arm64/configs/vendor/k62v_haydn_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> arch/arm64/configs/vendor/k62v_haydn_defconfig
          echo "CONFIG_UNAME_RELEASE=\"shazam\"" >> arch/arm64/configs/vendor/k62v_haydn_defconfig
          sed -i 's|EXTRAVERSION.*|EXTRAVERSION = -shazam|' Makefile

      - name: Build Kernel
        run: |
          export ARCH=arm64
          export CROSS_COMPILE=aarch64-linux-gnu-
          make vendor/k62v_haydn_defconfig
          make -j$(nproc)

      - name: Upload zImage and dtb
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: |
            arch/arm64/boot/Image
            arch/arm64/boot/dts

      - name: Make AnyKernel3 Flashable Zip
        run: |
          git clone https://github.com/Kernel-SU/AnyKernel3
          cd AnyKernel3
          rm -rf .git
          sed -i 's|^kernel\.string=.*|kernel.string=KernelSU SUSFS by Shazam|' anykernel.sh
          cp ../arch/arm64/boot/Image .
          zip -r9 ../kernel-susfs-shazam.zip .

      - name: Upload Flashable Zip
        uses: actions/upload-artifact@v4
        with:
          name: flashable-zip
          path: kernel-susfs-shazam.zip
